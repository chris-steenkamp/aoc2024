{
  "AoC Day Template": {
    "prefix": "aocday",
    "body": [
      "defmodule Day$1 do",
      "  def sample1(input \\\\\\ \"day$1/sample.txt\") do",
      "    input",
      "    |> Helpers.get_lines()",
      "    |> solve_part1()",
      "  end",
      "",
      "  def sample2(input \\\\\\ \"day$1/sample.txt\") do",
      "    input",
      "    |> Helpers.get_lines()",
      "    |> solve_part2()",
      "  end",
      "",
      "  def part1(input \\\\\\ \"day$1/input.txt\") do",
      "    input",
      "    |> Helpers.get_lines()",
      "    |> solve_part1()",
      "  end",
      "",
      "  def part2(input \\\\\\ \"day$1/input.txt\") do",
      "    input",
      "    |> Helpers.get_lines()",
      "    |> solve_part2()",
      "  end",
      "",
      "  def solve_part1(lines) do",
      "    $2",
      "  end",
      "",
      "  def solve_part2(lines) do",
      "    $3",
      "  end",
      "end"
    ],
    "description": "Template for Advent of Code daily solution"
  },
  "AoC Test Template": {
    "prefix": "aoctest",
    "body": [
      "defmodule Day$1Test do",
      "  use ExUnit.Case",
      "",
      "  @moduletag :day$1",
      "",
      "  test \"test the sample inputs\", %{test: test} do",
      "    assert Day$1.sample1() == $2",
      "    assert Day$1.sample2() == $3",
      "  end",
      "",
      "  @tag :real",
      "  test \"test the real inputs\", %{test: test} do",
      "    assert Day$1.part1() == $4",
      "    assert Day$1.part2() == $5",
      "  end",
      "end"
    ],
    "description": "Template for Advent of Code test file"
  }
}